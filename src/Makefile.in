# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CXX = @CXX@
DEPDIR = @DEPDIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBSDL_CFLAGS = @LIBSDL_CFLAGS@
LIBSDL_LIBS = @LIBSDL_LIBS@
LIBSDL_RPATH = @LIBSDL_RPATH@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
SDLMM_CONFIG = @SDLMM_CONFIG@
SDLMM_CXXFLAGS = @SDLMM_CXXFLAGS@
SDLMM_LIBS = @SDLMM_LIBS@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

bin_PROGRAMS = openorbiter
openorbiter_SOURCES = collider.cpp deathzone.cpp input.cpp map.cpp match.cpp \
		node.cpp object.cpp openorbiter.cpp orbiter.cpp player.cpp renderer.cpp \
		solid.cpp lfontrenderer.cpp Font.cpp FontData.cpp


# set the include path found by configure
INCLUDES = $(all_includes)

# the library search path.
#openorbiter_LDFLAGS = $(all_libraries) $(LIBSDL_RPATH)
openorbiter_CXXFLAGS = $(LIBSDL_CFLAGS)
openorbiter_LDADD = $(top_builddir)/src/timer/libmercury_timer.a \
	$(top_builddir)/src/math/libmath.a -lSDL_ttf -lGLU -lGL $(LIBSDL_LIBS)

noinst_HEADERS = node.h orbiter.h map.h object.h match.h player.h deathzone.h \
		renderer.h input.h solid.h collider.h lfontrenderer.h Font.h FontData.h Types.h

SUBDIRS = math timer common

DISTCLEANFILES = confpaths.h
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = openorbiter$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_openorbiter_OBJECTS = openorbiter-collider.$(OBJEXT) \
	openorbiter-deathzone.$(OBJEXT) openorbiter-input.$(OBJEXT) \
	openorbiter-map.$(OBJEXT) openorbiter-match.$(OBJEXT) \
	openorbiter-node.$(OBJEXT) openorbiter-object.$(OBJEXT) \
	openorbiter-openorbiter.$(OBJEXT) openorbiter-orbiter.$(OBJEXT) \
	openorbiter-player.$(OBJEXT) openorbiter-renderer.$(OBJEXT) \
	openorbiter-solid.$(OBJEXT) openorbiter-lfontrenderer.$(OBJEXT) \
	openorbiter-Font.$(OBJEXT) openorbiter-FontData.$(OBJEXT)
openorbiter_OBJECTS = $(am_openorbiter_OBJECTS)
openorbiter_DEPENDENCIES = $(top_builddir)/src/timer/libmercury_timer.a \
	$(top_builddir)/src/math/libmath.a
openorbiter_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/openorbiter-Font.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-FontData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-collider.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-deathzone.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-input.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-lfontrenderer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-map.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-match.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-node.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-object.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-openorbiter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-orbiter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-player.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-renderer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openorbiter-solid.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(openorbiter_SOURCES)
HEADERS = $(noinst_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(openorbiter_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
openorbiter-collider.$(OBJEXT): collider.cpp
openorbiter-deathzone.$(OBJEXT): deathzone.cpp
openorbiter-input.$(OBJEXT): input.cpp
openorbiter-map.$(OBJEXT): map.cpp
openorbiter-match.$(OBJEXT): match.cpp
openorbiter-node.$(OBJEXT): node.cpp
openorbiter-object.$(OBJEXT): object.cpp
openorbiter-openorbiter.$(OBJEXT): openorbiter.cpp
openorbiter-orbiter.$(OBJEXT): orbiter.cpp
openorbiter-player.$(OBJEXT): player.cpp
openorbiter-renderer.$(OBJEXT): renderer.cpp
openorbiter-solid.$(OBJEXT): solid.cpp
openorbiter-lfontrenderer.$(OBJEXT): lfontrenderer.cpp
openorbiter-Font.$(OBJEXT): Font.cpp
openorbiter-FontData.$(OBJEXT): FontData.cpp
openorbiter$(EXEEXT): $(openorbiter_OBJECTS) $(openorbiter_DEPENDENCIES) 
	@rm -f openorbiter$(EXEEXT)
	$(CXXLINK) $(openorbiter_LDFLAGS) $(openorbiter_OBJECTS) $(openorbiter_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-Font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-FontData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-collider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-deathzone.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-lfontrenderer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-match.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-node.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-openorbiter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-orbiter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-renderer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openorbiter-solid.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

openorbiter-collider.o: collider.cpp
@AMDEP_TRUE@	source='collider.cpp' object='openorbiter-collider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-collider.Po' tmpdepfile='$(DEPDIR)/openorbiter-collider.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-collider.o `test -f 'collider.cpp' || echo '$(srcdir)/'`collider.cpp

openorbiter-collider.obj: collider.cpp
@AMDEP_TRUE@	source='collider.cpp' object='openorbiter-collider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-collider.Po' tmpdepfile='$(DEPDIR)/openorbiter-collider.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-collider.obj `cygpath -w collider.cpp`

openorbiter-deathzone.o: deathzone.cpp
@AMDEP_TRUE@	source='deathzone.cpp' object='openorbiter-deathzone.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-deathzone.Po' tmpdepfile='$(DEPDIR)/openorbiter-deathzone.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-deathzone.o `test -f 'deathzone.cpp' || echo '$(srcdir)/'`deathzone.cpp

openorbiter-deathzone.obj: deathzone.cpp
@AMDEP_TRUE@	source='deathzone.cpp' object='openorbiter-deathzone.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-deathzone.Po' tmpdepfile='$(DEPDIR)/openorbiter-deathzone.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-deathzone.obj `cygpath -w deathzone.cpp`

openorbiter-input.o: input.cpp
@AMDEP_TRUE@	source='input.cpp' object='openorbiter-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-input.Po' tmpdepfile='$(DEPDIR)/openorbiter-input.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp

openorbiter-input.obj: input.cpp
@AMDEP_TRUE@	source='input.cpp' object='openorbiter-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-input.Po' tmpdepfile='$(DEPDIR)/openorbiter-input.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-input.obj `cygpath -w input.cpp`

openorbiter-map.o: map.cpp
@AMDEP_TRUE@	source='map.cpp' object='openorbiter-map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-map.Po' tmpdepfile='$(DEPDIR)/openorbiter-map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-map.o `test -f 'map.cpp' || echo '$(srcdir)/'`map.cpp

openorbiter-map.obj: map.cpp
@AMDEP_TRUE@	source='map.cpp' object='openorbiter-map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-map.Po' tmpdepfile='$(DEPDIR)/openorbiter-map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-map.obj `cygpath -w map.cpp`

openorbiter-match.o: match.cpp
@AMDEP_TRUE@	source='match.cpp' object='openorbiter-match.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-match.Po' tmpdepfile='$(DEPDIR)/openorbiter-match.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-match.o `test -f 'match.cpp' || echo '$(srcdir)/'`match.cpp

openorbiter-match.obj: match.cpp
@AMDEP_TRUE@	source='match.cpp' object='openorbiter-match.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-match.Po' tmpdepfile='$(DEPDIR)/openorbiter-match.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-match.obj `cygpath -w match.cpp`

openorbiter-node.o: node.cpp
@AMDEP_TRUE@	source='node.cpp' object='openorbiter-node.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-node.Po' tmpdepfile='$(DEPDIR)/openorbiter-node.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-node.o `test -f 'node.cpp' || echo '$(srcdir)/'`node.cpp

openorbiter-node.obj: node.cpp
@AMDEP_TRUE@	source='node.cpp' object='openorbiter-node.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-node.Po' tmpdepfile='$(DEPDIR)/openorbiter-node.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-node.obj `cygpath -w node.cpp`

openorbiter-object.o: object.cpp
@AMDEP_TRUE@	source='object.cpp' object='openorbiter-object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-object.Po' tmpdepfile='$(DEPDIR)/openorbiter-object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-object.o `test -f 'object.cpp' || echo '$(srcdir)/'`object.cpp

openorbiter-object.obj: object.cpp
@AMDEP_TRUE@	source='object.cpp' object='openorbiter-object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-object.Po' tmpdepfile='$(DEPDIR)/openorbiter-object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-object.obj `cygpath -w object.cpp`

openorbiter-openorbiter.o: openorbiter.cpp
@AMDEP_TRUE@	source='openorbiter.cpp' object='openorbiter-openorbiter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-openorbiter.Po' tmpdepfile='$(DEPDIR)/openorbiter-openorbiter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-openorbiter.o `test -f 'openorbiter.cpp' || echo '$(srcdir)/'`openorbiter.cpp

openorbiter-openorbiter.obj: openorbiter.cpp
@AMDEP_TRUE@	source='openorbiter.cpp' object='openorbiter-openorbiter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-openorbiter.Po' tmpdepfile='$(DEPDIR)/openorbiter-openorbiter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-openorbiter.obj `cygpath -w openorbiter.cpp`

openorbiter-orbiter.o: orbiter.cpp
@AMDEP_TRUE@	source='orbiter.cpp' object='openorbiter-orbiter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-orbiter.Po' tmpdepfile='$(DEPDIR)/openorbiter-orbiter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-orbiter.o `test -f 'orbiter.cpp' || echo '$(srcdir)/'`orbiter.cpp

openorbiter-orbiter.obj: orbiter.cpp
@AMDEP_TRUE@	source='orbiter.cpp' object='openorbiter-orbiter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-orbiter.Po' tmpdepfile='$(DEPDIR)/openorbiter-orbiter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-orbiter.obj `cygpath -w orbiter.cpp`

openorbiter-player.o: player.cpp
@AMDEP_TRUE@	source='player.cpp' object='openorbiter-player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-player.Po' tmpdepfile='$(DEPDIR)/openorbiter-player.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp

openorbiter-player.obj: player.cpp
@AMDEP_TRUE@	source='player.cpp' object='openorbiter-player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-player.Po' tmpdepfile='$(DEPDIR)/openorbiter-player.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-player.obj `cygpath -w player.cpp`

openorbiter-renderer.o: renderer.cpp
@AMDEP_TRUE@	source='renderer.cpp' object='openorbiter-renderer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-renderer.Po' tmpdepfile='$(DEPDIR)/openorbiter-renderer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-renderer.o `test -f 'renderer.cpp' || echo '$(srcdir)/'`renderer.cpp

openorbiter-renderer.obj: renderer.cpp
@AMDEP_TRUE@	source='renderer.cpp' object='openorbiter-renderer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-renderer.Po' tmpdepfile='$(DEPDIR)/openorbiter-renderer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-renderer.obj `cygpath -w renderer.cpp`

openorbiter-solid.o: solid.cpp
@AMDEP_TRUE@	source='solid.cpp' object='openorbiter-solid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-solid.Po' tmpdepfile='$(DEPDIR)/openorbiter-solid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-solid.o `test -f 'solid.cpp' || echo '$(srcdir)/'`solid.cpp

openorbiter-solid.obj: solid.cpp
@AMDEP_TRUE@	source='solid.cpp' object='openorbiter-solid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-solid.Po' tmpdepfile='$(DEPDIR)/openorbiter-solid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-solid.obj `cygpath -w solid.cpp`

openorbiter-lfontrenderer.o: lfontrenderer.cpp
@AMDEP_TRUE@	source='lfontrenderer.cpp' object='openorbiter-lfontrenderer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-lfontrenderer.Po' tmpdepfile='$(DEPDIR)/openorbiter-lfontrenderer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-lfontrenderer.o `test -f 'lfontrenderer.cpp' || echo '$(srcdir)/'`lfontrenderer.cpp

openorbiter-lfontrenderer.obj: lfontrenderer.cpp
@AMDEP_TRUE@	source='lfontrenderer.cpp' object='openorbiter-lfontrenderer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-lfontrenderer.Po' tmpdepfile='$(DEPDIR)/openorbiter-lfontrenderer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-lfontrenderer.obj `cygpath -w lfontrenderer.cpp`

openorbiter-Font.o: Font.cpp
@AMDEP_TRUE@	source='Font.cpp' object='openorbiter-Font.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-Font.Po' tmpdepfile='$(DEPDIR)/openorbiter-Font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-Font.o `test -f 'Font.cpp' || echo '$(srcdir)/'`Font.cpp

openorbiter-Font.obj: Font.cpp
@AMDEP_TRUE@	source='Font.cpp' object='openorbiter-Font.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-Font.Po' tmpdepfile='$(DEPDIR)/openorbiter-Font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-Font.obj `cygpath -w Font.cpp`

openorbiter-FontData.o: FontData.cpp
@AMDEP_TRUE@	source='FontData.cpp' object='openorbiter-FontData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-FontData.Po' tmpdepfile='$(DEPDIR)/openorbiter-FontData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-FontData.o `test -f 'FontData.cpp' || echo '$(srcdir)/'`FontData.cpp

openorbiter-FontData.obj: FontData.cpp
@AMDEP_TRUE@	source='FontData.cpp' object='openorbiter-FontData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/openorbiter-FontData.Po' tmpdepfile='$(DEPDIR)/openorbiter-FontData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openorbiter_CXXFLAGS) $(CXXFLAGS) -c -o openorbiter-FontData.obj `cygpath -w FontData.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-recursive distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive

confpaths.h: Makefile
	echo "#define PKGDATADIR \"$(pkgdatadir)\"" > $@

renderer.cpp: confpaths.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
