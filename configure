#!/bin/sh


function printhelp() {
	echo "Usage $1 [OPTION]..."
	echo
	echo "Options:"
	echo
	echo "  --prefix=PREFIX        architecture-independent files [/usr/local]"
	echo "  --exec-prefix=EPREFIX  architecture-dependent files [PREFIX]"
	echo
	echo "  --bindir=BINDIR        user executables [EPREFIX/bin]"
	echo "  --datadir=DATADIR      read-only data [PREFIX/share/openorbiter]"
	echo ""
	echo "  --enable-debug         build with debug output"
	echo "  --disable-svg          build without SVG support"
	echo "  --disable-opengl       build without OpenGL support"
	echo ""
	echo "  --help                 display this help and exit"
	echo ""
	exit 0
}


function printinvalid() {
	echo Invalid option passed: $1
	exit 1
}


function test_qt() {
	if [ -x "$1" ]; then
		return 0
	else
		return 1
	fi
}


function check_qt_version_internal()
{
	local q
	local QTDIR_QMAKE
	[ -n "$QTDIR" ] && QTDIR_QMAKE="$QTDIR/bin/qmake"
	
	for q in "$QTDIR_QMAKE" "$(type -p qmake)"; do
		if "$q" > /dev/null 2>&1; then
			echo "Testing $q..."

			if ! gmake clean all > /dev/null 2>&1; then
				echo "  failed!"
				continue
			fi

			if ./qtcheck; then
				echo " - ok"
				QM="$q"
				return 0
			else
				echo " - not supported!"
				rm -rf qtcheck
				continue
			fi
		fi
	done

	echo "Qt not found!"
	return 1
}


function check_qt_version()
{
	local TEMPDIR=$(mktemp -d)
	local OLD_DIR=$(pwd)
	cd $TEMPDIR
	cat > qtcheck.pro << EOF
QT += xml $QT_FEATURES
TEMPLATE = app
SOURCES = qtcheck.cpp
EOF
	cat > qtcheck.cpp << EOF
#include <iostream>
#include <qglobal.h>
int main()
{
	std::cout << "  "  << QT_VERSION_STR;
	if (QT_VERSION >= 0x040200)
		return EXIT_SUCCESS;
	return EXIT_FAILURE;
}
EOF
	check_qt_version_internal
	local RET=$?
	cd $OLD_DIR
	rm -rf $TEMPDIR

	if [ "$RET" -ne "0" ]; then
		echo " *** You need at least Qt 4.2 in order to build OpenOrbiter! ***"
		return 1
	fi

	echo
	return 0
}


DEBUG=""
NO_SVG=""
NO_OPENGL=""


for arg do
	opt=$(expr "x$arg" : 'x[^=]*=\(.*\)')

	case $arg in
	--help)
		printhelp $0
		;;
	--prefix=*)
		PREFIX=$opt
		;;
	--exec-prefix=*)
		EPREFIX=$opt
		;;
	--bindir=*)
		BINDIR=$opt
		;;
	--datadir=*)
		DATADIR=$opt
		;;
	--enable-debug)
		DEBUG=1
		;;
	--disable-svg)
		NO_SVG=1
		;;
	--disable-opengl)
		NO_OPENGL=1
		;;
	*)
		printinvalid $arg
		;;
	esac
done


QT_FEATURES=""
[ -z "$NO_SVG" ] && QT_FEATURES="$QT_FEATURES svg"
[ -z "$NO_OPENGL" ] && QT_FEATURES="$QT_FEATURES opengl"

check_qt_version || exit 1

[ -z $PREFIX ] && PREFIX=/usr/local
[ -z $EPREFIX ] && EPREFIX=$PREFIX

[ -z $BINDIR ] && BINDIR=$EPREFIX/bin
[ -z $DATADIR ] && DATADIR=$PREFIX/share/openorbiter

mkdir -p build

echo "BINDIR  = $BINDIR"  >  build/configure.pri
echo "DATADIR = $DATADIR" >> build/configure.pri

if [ -n "$DEBUG" ]; then
	echo "CONFIG += debug" >> build/configure.pri
	echo "CONFIG -= release" >> build/configure.pri
else
	echo "CONFIG -= debug" >> build/configure.pri
	echo "CONFIG += release" >> build/configure.pri
fi

[ -z "$NO_SVG" ] && echo "QT += svg" >> build/configure.pri
[ -z "$NO_OPENGL" ] && echo "QT += svg opengl" >> build/configure.pri


echo "#ifndef CONFIG_H"              > build/configure.h
echo "#define CONFIG_H"             >> build/configure.h

echo "#define DATADIR \"$DATADIR\"" >> build/configure.h
[ -z "$NO_SVG" ] && echo "#define USE_SVG" >> build/configure.h
[ -z "$NO_OPENGL" ] && echo "#define USE_OPENGL" >> build/configure.h

echo "#endif"                       >> build/configure.h

if ! "$QM" openorbiter.pro; then
	echo " *** qmake failed ***"
	exit 1
fi

echo Configuration complete
echo
echo "  BINDIR  = $BINDIR"
echo "  DATADIR = $DATADIR"

if [ -n "$DEBUG" ]; then
	echo "  Building with debug output"
else
	echo "  Building without debug output"
fi
if [ -n "$NO_SVG" ]; then
	echo "  Building without SVG support"
else
	echo "  Building with SVG support"
fi
if [ -n "$NO_OPENGL" ]; then
	echo "  Building without OpenGL support"
else
	echo "  Building with OpenGL support"
fi

touch src/defs.h

echo
